{"version":3,"sources":["node_modules/ng-otp-input/fesm2015/ng-otp-input.js","src/app/pages/verification/verification.page.html","src/app/pages/verification/verification-routing.module.ts","src/app/pages/verification/verification.module.ts","src/app/pages/verification/verification.page.scss","src/app/pages/verification/verification.page.ts"],"names":[],"mappings":"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","sourcesContent":["import { FormGroup, FormControl, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Pipe, Component, Input, Output, EventEmitter, Directive, ElementRef, Renderer2, NgModule } from '@angular/core';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass KeysPipe {\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    transform(value) {\r\n        return Object.keys(value);\r\n    }\r\n}\r\nKeysPipe.decorators = [\r\n    { type: Pipe, args: [{\r\n                name: 'keys'\r\n            },] }\r\n];\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgOtpInputComponent {\r\n    /**\r\n     * @param {?} keysPipe\r\n     */\r\n    constructor(keysPipe) {\r\n        this.keysPipe = keysPipe;\r\n        this.config = { length: 4 };\r\n        // tslint:disable-next-line: no-output-on-prefix\r\n        this.onInputChange = new EventEmitter();\r\n        this.inputControls = new Array(this.config.length);\r\n        this.componentKey = Math.random()\r\n            .toString(36)\r\n            .substring(2) + new Date().getTime().toString(36);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        this.otpForm = new FormGroup({});\r\n        for (let index = 0; index < this.config.length; index++) {\r\n            this.otpForm.addControl(this.getControlName(index), new FormControl());\r\n        }\r\n        this.inputType = this.getInputType();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngAfterViewInit() {\r\n        if (!this.config.disableAutoFocus) {\r\n            /** @type {?} */\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            if (containerItem) {\r\n                containerItem.addEventListener('paste', (/**\r\n                 * @param {?} evt\r\n                 * @return {?}\r\n                 */\r\n                (evt) => this.handlePaste(evt)));\r\n                /** @type {?} */\r\n                const ele = containerItem.getElementsByClassName('otp-input')[0];\r\n                if (ele && ele.focus) {\r\n                    ele.focus();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} idx\r\n     * @return {?}\r\n     */\r\n    getControlName(idx) {\r\n        return `ctrl_${idx}`;\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifLeftArrow(event) {\r\n        return this.ifKeyCode(event, 37);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifRightArrow(event) {\r\n        return this.ifKeyCode(event, 39);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifBackspaceOrDelete(event) {\r\n        return (event.key === 'Backspace' ||\r\n            event.key === 'Delete' ||\r\n            this.ifKeyCode(event, 8) ||\r\n            this.ifKeyCode(event, 46));\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @param {?} targetCode\r\n     * @return {?}\r\n     */\r\n    ifKeyCode(event, targetCode) {\r\n        /** @type {?} */\r\n        const key = event.keyCode || event.charCode;\r\n        // tslint:disable-next-line: triple-equals\r\n        return key == targetCode ? true : false;\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onKeyDown($event) {\r\n        /** @type {?} */\r\n        var isSpace = this.ifKeyCode($event, 32);\r\n        if (isSpace) { // prevent space\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @param {?} inputIdx\r\n     * @return {?}\r\n     */\r\n    onKeyUp($event, inputIdx) {\r\n        /** @type {?} */\r\n        const nextInputId = this.appendKey(`otp_${inputIdx + 1}`);\r\n        /** @type {?} */\r\n        const prevInputId = this.appendKey(`otp_${inputIdx - 1}`);\r\n        if (this.ifRightArrow($event)) {\r\n            this.setSelected(nextInputId);\r\n            return;\r\n        }\r\n        if (this.ifLeftArrow($event)) {\r\n            this.setSelected(prevInputId);\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        const isBackspace = this.ifBackspaceOrDelete($event);\r\n        if (isBackspace && !$event.target.value) {\r\n            this.setSelected(prevInputId);\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        if (!$event.target.value) {\r\n            return;\r\n        }\r\n        if (this.ifValidEntry($event)) {\r\n            this.setSelected(nextInputId);\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    appendKey(id) {\r\n        return `${id}_${this.componentKey}`;\r\n    }\r\n    /**\r\n     * @param {?} eleId\r\n     * @return {?}\r\n     */\r\n    setSelected(eleId) {\r\n        this.focusTo(eleId);\r\n        /** @type {?} */\r\n        const ele = document.getElementById(eleId);\r\n        if (ele && ele.setSelectionRange) {\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                ele.setSelectionRange(0, 1);\r\n            }), 0);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifValidEntry(event) {\r\n        /** @type {?} */\r\n        const inp = String.fromCharCode(event.keyCode);\r\n        /** @type {?} */\r\n        const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        return (isMobile ||\r\n            /[a-zA-Z0-9-_]/.test(inp) ||\r\n            (this.config.allowKeyCodes &&\r\n                this.config.allowKeyCodes.includes(event.keyCode)) ||\r\n            (event.keyCode >= 96 && event.keyCode <= 105));\r\n    }\r\n    /**\r\n     * @param {?} eleId\r\n     * @return {?}\r\n     */\r\n    focusTo(eleId) {\r\n        /** @type {?} */\r\n        const ele = document.getElementById(eleId);\r\n        if (ele) {\r\n            ele.focus();\r\n        }\r\n    }\r\n    // method to set component value\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    setValue(value) {\r\n        if (this.config.allowNumbersOnly && isNaN(value)) {\r\n            return;\r\n        }\r\n        this.otpForm.reset();\r\n        if (!value) {\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        value = value.toString().replace(/\\s/g, ''); // remove whitespace\r\n        Array.from(value).forEach((/**\r\n         * @param {?} c\r\n         * @param {?} idx\r\n         * @return {?}\r\n         */\r\n        (c, idx) => {\r\n            if (this.otpForm.get(this.getControlName(idx))) {\r\n                this.otpForm.get(this.getControlName(idx)).setValue(c);\r\n            }\r\n        }));\r\n        /** @type {?} */\r\n        const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n        /** @type {?} */\r\n        var indexOfElementToFocus = value.length < this.config.length ? value.length : (this.config.length - 1);\r\n        /** @type {?} */\r\n        let ele = containerItem.getElementsByClassName('otp-input')[indexOfElementToFocus];\r\n        if (ele && ele.focus) {\r\n            ele.focus();\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    rebuildValue() {\r\n        /** @type {?} */\r\n        let val = '';\r\n        this.keysPipe.transform(this.otpForm.controls).forEach((/**\r\n         * @param {?} k\r\n         * @return {?}\r\n         */\r\n        k => {\r\n            if (this.otpForm.controls[k].value) {\r\n                val += this.otpForm.controls[k].value;\r\n            }\r\n        }));\r\n        this.onInputChange.emit(val);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getInputType() {\r\n        return this.config.isPasswordInput\r\n            ? 'password'\r\n            : this.config.allowNumbersOnly\r\n                ? 'tel'\r\n                : 'text';\r\n    }\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    handlePaste(e) {\r\n        // Get pasted data via clipboard API\r\n        /** @type {?} */\r\n        let clipboardData = e.clipboardData || window['clipboardData'];\r\n        if (clipboardData) {\r\n            /** @type {?} */\r\n            var pastedData = clipboardData.getData('Text');\r\n        }\r\n        // Stop data actually being pasted into div\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        if (!pastedData) {\r\n            return;\r\n        }\r\n        this.setValue(pastedData);\r\n    }\r\n}\r\nNgOtpInputComponent.decorators = [\r\n    { type: Component, args: [{\r\n                // tslint:disable-next-line: component-selector\r\n                selector: 'ng-otp-input',\r\n                template: \"<div class=\\\"wrapper {{config.containerClass}}\\\" id=\\\"c_{{componentKey}}\\\" *ngIf=\\\"otpForm?.controls\\\"\\r\\n  [ngStyle]=\\\"config.containerStyles\\\">\\r\\n  <input [pattern]=\\\"config.allowNumbersOnly ? '\\\\\\\\d*' : ''\\\" [type]=\\\"inputType\\\" numberOnly [placeholder]=\\\"config?.placeholder || ''\\\"\\r\\n    [disabledNumberOnly]=\\\"!config.allowNumbersOnly\\\" [ngStyle]=\\\"config.inputStyles\\\" maxlength=\\\"1\\\"\\r\\n    class=\\\"otp-input {{config.inputClass}}\\\" autocomplete=\\\"off\\\" *ngFor=\\\"let item of otpForm?.controls | keys;let i=index\\\"\\r\\n    [formControl]=\\\"otpForm.controls[item]\\\" id=\\\"otp_{{i}}_{{componentKey}}\\\" (keydown)=\\\"onKeyDown($event)\\\"\\r\\n    (keyup)=\\\"onKeyUp($event,i)\\\">\\r\\n</div>\",\r\n                styles: [\".otp-input{width:50px;height:50px;border-radius:4px;border:1px solid #c5c5c5;text-align:center;font-size:32px}.wrapper .otp-input:not(:last-child){margin-right:8px}@media screen and (max-width:767px){.otp-input{width:40px;font-size:24px;height:40px}}@media screen and (max-width:420px){.otp-input{width:30px;font-size:18px;height:30px}}\"]\r\n            }] }\r\n];\r\n/** @nocollapse */\r\nNgOtpInputComponent.ctorParameters = () => [\r\n    { type: KeysPipe }\r\n];\r\nNgOtpInputComponent.propDecorators = {\r\n    config: [{ type: Input }],\r\n    onInputChange: [{ type: Output }]\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NumberOnlyDirective {\r\n    /**\r\n     * @param {?} _elRef\r\n     * @param {?} _renderer\r\n     */\r\n    constructor(_elRef, _renderer) {\r\n        this._elRef = _elRef;\r\n        this._renderer = _renderer;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (!this.disabledNumberOnly) {\r\n            this._renderer.setAttribute(this._elRef.nativeElement, 'onkeypress', 'return (event.charCode >= 48 && event.charCode <= 57) || event.charCode == 0');\r\n        }\r\n    }\r\n}\r\nNumberOnlyDirective.decorators = [\r\n    { type: Directive, args: [{\r\n                selector: '[numberOnly]'\r\n            },] }\r\n];\r\n/** @nocollapse */\r\nNumberOnlyDirective.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Renderer2 }\r\n];\r\nNumberOnlyDirective.propDecorators = {\r\n    disabledNumberOnly: [{ type: Input }]\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgOtpInputModule {\r\n}\r\nNgOtpInputModule.decorators = [\r\n    { type: NgModule, args: [{\r\n                imports: [\r\n                    CommonModule,\r\n                    FormsModule,\r\n                    ReactiveFormsModule\r\n                ],\r\n                declarations: [NgOtpInputComponent, KeysPipe, NumberOnlyDirective],\r\n                exports: [NgOtpInputComponent],\r\n                providers: [KeysPipe]\r\n            },] }\r\n];\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NgOtpInputModule, NgOtpInputComponent as ɵa, NumberOnlyDirective as ɵc, KeysPipe as ɵb };\n\n//# sourceMappingURL=ng-otp-input.js.map","export default \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Verification</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <div class=\\\"main_content_div\\\">\\n    <ion-label class=\\\"head_lbl\\\">Angular OTP Input</ion-label>\\n\\n    <div class=\\\"check_div\\\">\\n      <input type=\\\"checkbox\\\" class=\\\"check\\\" name=\\\"number-only\\\" id=\\\"number-only\\\" [(ngModel)]=\\\"config.allowNumbersOnly\\\"\\n        (change)=\\\"onConfigChange()\\\">\\n      <span>Allow Number Only</span>\\n    </div>\\n\\n    <div class=\\\"check_div\\\">\\n      <input type=\\\"checkbox\\\" class=\\\"check\\\" name=\\\"pass-input\\\" id=\\\"pass-input\\\" [(ngModel)]=\\\"config.isPasswordInput\\\"\\n        (change)=\\\"onConfigChange()\\\">\\n      <span>Password Input</span>\\n    </div>\\n\\n    <div class=\\\"check_div\\\">\\n      <input type=\\\"checkbox\\\" class=\\\"check\\\" name=\\\"disable-focus\\\" id=\\\"disable-focus\\\" [(ngModel)]=\\\"config.disableAutoFocus\\\"\\n        (change)=\\\"onConfigChange()\\\">\\n      <span>Disable Auto Focus</span>\\n    </div>\\n\\n    <div class=\\\"form_div\\\">\\n      <ion-label class=\\\"lbl\\\">Number of Inputs</ion-label>\\n      <input type=\\\"number\\\" name=\\\"input-length\\\" [(ngModel)]=\\\"config.length\\\" min=\\\"1\\\" max=\\\"10\\\"\\n        (ngModelChange)=\\\"onConfigChange()\\\">\\n\\n      <ion-label class=\\\"lbl\\\">Placeholder</ion-label>\\n      <input type=\\\"text\\\" name=\\\"input-placeholder\\\" [(ngModel)]=\\\"config.placeholder\\\" maxlength=\\\"1\\\"\\n        (change)=\\\"onConfigChange()\\\">\\n\\n      <ion-label class=\\\"lbl\\\">Update Value To</ion-label>\\n      <input type=\\\"text\\\" #valInput name=\\\"input-update-val\\\" placeholder=\\\"Focus out to change\\\"\\n        (change)=\\\"setVal(valInput.value)\\\" min=\\\"1\\\" max=\\\"10\\\">\\n    </div>\\n\\n    <div class=\\\"card\\\">\\n      <ion-label class=\\\"head_lbl\\\">Enter verification code</ion-label>\\n      <ng-otp-input #ngOtpInput (onInputChange)=\\\"onOtpChange($event)\\\" *ngIf=\\\"showOtpComponent\\\" [config]=\\\"config\\\">\\n      </ng-otp-input>\\n      <span *ngIf=\\\"otp\\\" class=\\\"o-t-p\\\">Entered otp : {{otp}}</span>\\n    </div>\\n    \\n  </div>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { VerificationPage } from './verification.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VerificationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VerificationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { VerificationPageRoutingModule } from './verification-routing.module';\n\nimport { VerificationPage } from './verification.page';\nimport { NgOtpInputModule } from 'ng-otp-input';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    VerificationPageRoutingModule,\n    NgOtpInputModule\n  ],\n  declarations: [VerificationPage]\n})\nexport class VerificationPageModule { }\n","export default \".main_content_div {\\n  width: 100%;\\n  padding: 20px;\\n}\\n.main_content_div ion-label {\\n  display: block;\\n}\\n.main_content_div .head_lbl {\\n  font-size: 25px;\\n  padding: 5px;\\n  text-align: center;\\n  margin-bottom: 10px;\\n}\\n.main_content_div .check_div {\\n  margin-top: 20px;\\n  margin-bottom: 20px;\\n  display: -webkit-box;\\n  display: flex;\\n}\\n.main_content_div .check_div .check {\\n  height: 20px;\\n  width: 20px;\\n}\\n.main_content_div .check_div span {\\n  margin-left: 20px;\\n}\\n.main_content_div .form_div .lbl {\\n  margin-bottom: 5px;\\n}\\n.main_content_div .form_div input {\\n  width: 100%;\\n  border-radius: 5px;\\n  border: 1px solid lightgrey;\\n  height: 50px;\\n  padding: 0 0.5rem;\\n  margin-bottom: 10px;\\n  background: #f3f3f3;\\n}\\n.main_content_div .card {\\n  margin-top: 20px;\\n  padding: 10px;\\n  box-shadow: 0 1px 3px 0 #d4d4d5, 0 0 0 1px #d4d4d5;\\n  border-radius: 4px;\\n  display: -webkit-box;\\n  display: flex;\\n  width: 100%;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n.main_content_div .card span {\\n  margin-top: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvdmVyaWZpY2F0aW9uL0Q6XFxleHBlcnREZXZTb2x1dGlvbnNcXGlvbmljX2VycFxcQXBwX2NvZGUvc3JjXFxhcHBcXHBhZ2VzXFx2ZXJpZmljYXRpb25cXHZlcmlmaWNhdGlvbi5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL3ZlcmlmaWNhdGlvbi92ZXJpZmljYXRpb24ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtFQUNBLGFBQUE7QUNDRjtBRENFO0VBQ0UsY0FBQTtBQ0NKO0FERUU7RUFDRSxlQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBRUEsbUJBQUE7QUNESjtBRElFO0VBQ0UsZ0JBQUE7RUFDQSxtQkFBQTtFQUNBLG9CQUFBO0VBQUEsYUFBQTtBQ0ZKO0FESUk7RUFDRSxZQUFBO0VBQ0EsV0FBQTtBQ0ZOO0FESUk7RUFDRSxpQkFBQTtBQ0ZOO0FET0k7RUFDRSxrQkFBQTtBQ0xOO0FEUUk7RUFDRSxXQUFBO0VBQ0Esa0JBQUE7RUFDQSwyQkFBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtFQUNBLG1CQUFBO0VBQ0EsbUJBQUE7QUNOTjtBRFVFO0VBQ0UsZ0JBQUE7RUFDQSxhQUFBO0VBQ0Esa0RBQUE7RUFDQSxrQkFBQTtFQUNBLG9CQUFBO0VBQUEsYUFBQTtFQUNBLFdBQUE7RUFDQSx3QkFBQTtVQUFBLHVCQUFBO0VBQ0EsNEJBQUE7RUFBQSw2QkFBQTtVQUFBLHNCQUFBO0VBQ0EseUJBQUE7VUFBQSxtQkFBQTtBQ1JKO0FEVUk7RUFDRSxnQkFBQTtBQ1JOIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvdmVyaWZpY2F0aW9uL3ZlcmlmaWNhdGlvbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFpbl9jb250ZW50X2RpdntcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDIwcHg7XG5cbiAgaW9uLWxhYmVsIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gIC5oZWFkX2xibCB7XG4gICAgZm9udC1zaXplOiAyNXB4O1xuICAgIHBhZGRpbmc6IDVweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgLy8gYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGxpZ2h0Z3JheTtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICB9XG5cbiAgLmNoZWNrX2RpdntcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgZGlzcGxheTogZmxleDtcblxuICAgIC5jaGVja3tcbiAgICAgIGhlaWdodDogMjBweDtcbiAgICAgIHdpZHRoOiAyMHB4O1xuICAgIH1cbiAgICBzcGFue1xuICAgICAgbWFyZ2luLWxlZnQ6IDIwcHg7XG4gICAgfVxuICB9XG5cbiAgLmZvcm1fZGl2e1xuICAgIC5sYmx7XG4gICAgICBtYXJnaW4tYm90dG9tOiA1cHg7XG4gICAgfVxuICBcbiAgICBpbnB1dHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgbGlnaHRncmV5O1xuICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgICAgcGFkZGluZzogMCAwLjVyZW07XG4gICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgYmFja2dyb3VuZDogI2YzZjNmMztcbiAgICB9XG4gIH1cblxuICAuY2FyZCB7XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGJveC1zaGFkb3c6IDAgMXB4IDNweCAwICNkNGQ0ZDUsIDAgMCAwIDFweCAjZDRkNGQ1O1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgIHNwYW57XG4gICAgICBtYXJnaW4tdG9wOiAyMHB4O1xuICAgIH1cbiAgfVxufSIsIi5tYWluX2NvbnRlbnRfZGl2IHtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDIwcHg7XG59XG4ubWFpbl9jb250ZW50X2RpdiBpb24tbGFiZWwge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5tYWluX2NvbnRlbnRfZGl2IC5oZWFkX2xibCB7XG4gIGZvbnQtc2l6ZTogMjVweDtcbiAgcGFkZGluZzogNXB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG4ubWFpbl9jb250ZW50X2RpdiAuY2hlY2tfZGl2IHtcbiAgbWFyZ2luLXRvcDogMjBweDtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgZGlzcGxheTogZmxleDtcbn1cbi5tYWluX2NvbnRlbnRfZGl2IC5jaGVja19kaXYgLmNoZWNrIHtcbiAgaGVpZ2h0OiAyMHB4O1xuICB3aWR0aDogMjBweDtcbn1cbi5tYWluX2NvbnRlbnRfZGl2IC5jaGVja19kaXYgc3BhbiB7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xufVxuLm1haW5fY29udGVudF9kaXYgLmZvcm1fZGl2IC5sYmwge1xuICBtYXJnaW4tYm90dG9tOiA1cHg7XG59XG4ubWFpbl9jb250ZW50X2RpdiAuZm9ybV9kaXYgaW5wdXQge1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBib3JkZXI6IDFweCBzb2xpZCBsaWdodGdyZXk7XG4gIGhlaWdodDogNTBweDtcbiAgcGFkZGluZzogMCAwLjVyZW07XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIGJhY2tncm91bmQ6ICNmM2YzZjM7XG59XG4ubWFpbl9jb250ZW50X2RpdiAuY2FyZCB7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJveC1zaGFkb3c6IDAgMXB4IDNweCAwICNkNGQ0ZDUsIDAgMCAwIDFweCAjZDRkNGQ1O1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHdpZHRoOiAxMDAlO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5tYWluX2NvbnRlbnRfZGl2IC5jYXJkIHNwYW4ge1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufSJdfQ== */\"","/*\n\n  Authors : initappz (Rahul Jograna)\n  Website : https://initappz.com/\n  Created : 17-March-2020\n  This App Template Source code is licensed as per the \n  terms found in the Website https://initappz.com/license\n  Copyright and Good Faith Purchasers © 2020-present initappz.\n\n*/\nimport { Component, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-verification',\n  templateUrl: './verification.page.html',\n  styleUrls: ['./verification.page.scss'],\n})\nexport class VerificationPage implements OnInit {\n  otp: string;\n  showOtpComponent = true;\n  @ViewChild('ngOtpInput', { static: false }) ngOtpInput: any;\n  config = {\n    allowNumbersOnly: false,\n    length: 3,\n    isPasswordInput: false,\n    disableAutoFocus: false,\n    placeholder: '',\n    inputStyles: {\n      'width': '50px',\n      'height': '50px',\n    }\n  };\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onOtpChange(otp) {\n    this.otp = otp;\n  }\n\n  setVal(val) {\n    this.ngOtpInput.setValue(val);\n  }\n\n  onConfigChange() {\n    this.showOtpComponent = false;\n    this.otp = null;\n    setTimeout(() => {\n      this.showOtpComponent = true;\n    }, 0);\n  }\n}\n"],"sourceRoot":"webpack:///","file":"pages-verification-verification-module-es5.js"}