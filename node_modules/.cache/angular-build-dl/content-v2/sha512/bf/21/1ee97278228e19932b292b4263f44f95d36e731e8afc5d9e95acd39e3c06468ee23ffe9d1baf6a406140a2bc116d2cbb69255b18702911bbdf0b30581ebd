{"version":3,"sources":["src/app/pages/ProductRequests/send-request/send-request.page.html","src/app/pages/ProductRequests/send-request/send-request-routing.module.ts","src/app/pages/ProductRequests/send-request/send-request.module.ts","src/app/pages/ProductRequests/send-request/send-request.page.scss","src/app/pages/ProductRequests/send-request/send-request.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"secondary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <!--- <ion-back-button mode=\\\"md\\\"></ion-back-button>-->\\r\\n\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n\\r\\n    </ion-buttons>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button class=\\\"ion-button custom-class\\\" (click)=\\\"addtocart()\\\" color=\\\"red\\\"  fill=\\\"solid\\\">\\r\\n        <ion-icon name=\\\"cart\\\" style=\\\"color: white\\\"></ion-icon>\\r\\n        <ion-badge color=\\\"danger\\\" >{{charge_compteur()}}</ion-badge>\\r\\n      </ion-button>\\r\\n\\r\\n    </ion-buttons>\\r\\n    <ion-title style=\\\"text-align: center\\\">Envoyer une demande</ion-title>\\r\\n  </ion-toolbar>\\r\\n\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <form>\\r\\n    <ion-list lines=\\\"none\\\" class=\\\"contactFormList\\\">\\r\\n\\r\\n      <ion-item class=\\\"inputs-item\\\" lines=\\\"none\\\">\\r\\n        <ion-input type=\\\"text\\\" placeholder=\\\"Nom\\\" #nom></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item class=\\\"inputs-item\\\" lines=\\\"none\\\">\\r\\n        <ion-label>Client</ion-label>\\r\\n        <ion-select value=\\\"brown\\\" okText=\\\"Okay\\\" cancelText=\\\"Dismiss\\\" *ngFor=\\\"let item of user_list\\\">\\r\\n          <ion-select-option value=\\\"brown\\\">{{item.getfirstName()}} {{item.getlastName()}}</ion-select-option>\\r\\n        </ion-select>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item class=\\\"inputs-item\\\" lines=\\\"none\\\">\\r\\n        <ion-input type=\\\"email\\\" placeholder=\\\"Adresse email\\\" #adrmail></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item class=\\\"inputs-item\\\" lines=\\\"none\\\">\\r\\n        <ion-input type=\\\"text\\\" placeholder=\\\"Matricule Fiscale\\\" #nomutilid></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <!--<ion-item class=\\\"inputs-item\\\" lines=\\\"none\\\">\\r\\n        <ion-input type=\\\"password\\\" placeholder=\\\"Mot de passe\\\" #motdepasse></ion-input>\\r\\n      </ion-item>-->\\r\\n\\r\\n      <ion-item class=\\\"inputs-item\\\" lines=\\\"none\\\">\\r\\n        <ion-input type=\\\"text\\\" placeholder=\\\"Adresse\\\" #adr></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item class=\\\"inputs-item\\\" lines=\\\"none\\\">\\r\\n        <ion-input type=\\\"text\\\" placeholder=\\\"Ville\\\" #ville></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item class=\\\"inputs-item\\\" lines=\\\"none\\\">\\r\\n        <ion-input type=\\\"date\\\" placeholder=\\\"{{startDate}}\\\" #datenaiss></ion-input>\\r\\n\\r\\n\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item class=\\\"inputs-item\\\" lines=\\\"none\\\">\\r\\n        <ion-input type=\\\"text\\\" placeholder=\\\"Numéro tél\\\" #tel></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item class=\\\"inputs-item\\\" lines=\\\"none\\\">\\r\\n        <ion-input type=\\\"text\\\" placeholder=\\\"Fax\\\" #fax></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n\\r\\n    </ion-list>\\r\\n    <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" (click)=\\\"adduser(nom.value,prenom.value,adrmail.value,nomutilid.value, adr.value,ville.value,datenaiss.value,tel.value,fax.value)\\\">Enregistrer</ion-button>\\r\\n  </form>\\r\\n\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SendRequestPage } from './send-request.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SendRequestPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SendRequestPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { SendRequestPageRoutingModule } from './send-request-routing.module';\r\n\r\nimport { SendRequestPage } from './send-request.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    SendRequestPageRoutingModule\r\n  ],\r\n  declarations: [SendRequestPage]\r\n})\r\nexport class SendRequestPageModule {}\r\n","export default \"ion-badge {\\n  position: absolute;\\n  font-size: 8pt;\\n  right: -5px;\\n  top: 2px;\\n}\\n\\n.ion-button {\\n  margin: 5px;\\n  width: 40px;\\n  height: 40px;\\n  position: relative;\\n}\\n\\n/* Setting Overflow Visible */\\n\\n.ion-button.custom-class::part(native) {\\n  overflow: visible;\\n}\\n\\n.contactFormList {\\n  margin-top: 20px;\\n}\\n\\n.contactFormList .inputs-item {\\n  border: 1px solid lightcyan;\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\\n  margin: 10px;\\n}\\n\\nion-button {\\n  --border-radius: 5px;\\n  margin: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvUHJvZHVjdFJlcXVlc3RzL3NlbmQtcmVxdWVzdC9DOlxca2FpcyBpb25pYyBwcm9qZWN0XFxFUlBfTW9ub2xpdGhpcXVlTW9iaWxlL3NyY1xcYXBwXFxwYWdlc1xcUHJvZHVjdFJlcXVlc3RzXFxzZW5kLXJlcXVlc3RcXHNlbmQtcmVxdWVzdC5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL1Byb2R1Y3RSZXF1ZXN0cy9zZW5kLXJlcXVlc3Qvc2VuZC1yZXF1ZXN0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0VBQ0EsY0FBQTtFQUNBLFdBQUE7RUFDQSxRQUFBO0FDQ0Y7O0FERUE7RUFDRSxXQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtBQ0NGOztBREdBLDZCQUFBOztBQUNBO0VBQ0UsaUJBQUE7QUNBRjs7QURLQTtFQUNFLGdCQUFBO0FDRkY7O0FESUU7RUFDRSwyQkFBQTtFQUNBLHVDQUFBO0VBQ0EsWUFBQTtBQ0ZKOztBRE1BO0VBQ0Usb0JBQUE7RUFDQSxZQUFBO0FDSEYiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9Qcm9kdWN0UmVxdWVzdHMvc2VuZC1yZXF1ZXN0L3NlbmQtcmVxdWVzdC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tYmFkZ2Uge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBmb250LXNpemU6IDhwdDtcclxuICByaWdodDogLTVweDtcclxuICB0b3A6IDJweDtcclxufVxyXG5cclxuLmlvbi1idXR0b24ge1xyXG4gIG1hcmdpbjogNXB4O1xyXG4gIHdpZHRoOiA0MHB4O1xyXG4gIGhlaWdodDogNDBweDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgLy8gb3ZlcmZsb3c6IHZpc2libGUhaW1wb3J0YW50O1xyXG59XHJcblxyXG4vKiBTZXR0aW5nIE92ZXJmbG93IFZpc2libGUgKi9cclxuLmlvbi1idXR0b24uY3VzdG9tLWNsYXNzOjpwYXJ0KG5hdGl2ZSkge1xyXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xyXG59XHJcblxyXG5cclxuXHJcbi5jb250YWN0Rm9ybUxpc3Qge1xyXG4gIG1hcmdpbi10b3A6IDIwcHg7XHJcblxyXG4gIC5pbnB1dHMtaXRlbSB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCBsaWdodGN5YW47XHJcbiAgICBib3gtc2hhZG93OiAwIDAgMTBweCByZ2JhKDAsIDAsIDAsIDAuMyk7XHJcbiAgICBtYXJnaW46IDEwcHg7XHJcbiAgfVxyXG59XHJcblxyXG5pb24tYnV0dG9ue1xyXG4gIC0tYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIG1hcmdpbjogMTBweDtcclxufSIsImlvbi1iYWRnZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgZm9udC1zaXplOiA4cHQ7XG4gIHJpZ2h0OiAtNXB4O1xuICB0b3A6IDJweDtcbn1cblxuLmlvbi1idXR0b24ge1xuICBtYXJnaW46IDVweDtcbiAgd2lkdGg6IDQwcHg7XG4gIGhlaWdodDogNDBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4vKiBTZXR0aW5nIE92ZXJmbG93IFZpc2libGUgKi9cbi5pb24tYnV0dG9uLmN1c3RvbS1jbGFzczo6cGFydChuYXRpdmUpIHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi5jb250YWN0Rm9ybUxpc3Qge1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufVxuLmNvbnRhY3RGb3JtTGlzdCAuaW5wdXRzLWl0ZW0ge1xuICBib3JkZXI6IDFweCBzb2xpZCBsaWdodGN5YW47XG4gIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgbWFyZ2luOiAxMHB4O1xufVxuXG5pb24tYnV0dG9uIHtcbiAgLS1ib3JkZXItcmFkaXVzOiA1cHg7XG4gIG1hcmdpbjogMTBweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport {RestAPIsService} from \"../../../services/rest/rest-apis.service\";\r\nimport {User} from \"../../../modals/User\";\r\nimport {Observable} from \"rxjs\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {environmentApi} from \"../../../services/rest/environnement.model\";\r\nimport {HttpParams} from \"@angular/common/http\";\r\nimport {RequestSalesOrder} from \"../../../modals/RequestSalesOrder\";\r\nimport {Order} from \"../../../modals/Order\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-send-request',\r\n  templateUrl: './send-request.page.html',\r\n  styleUrls: ['./send-request.page.scss'],\r\n})\r\nexport class SendRequestPage implements OnInit {\r\n  badgecount:any;\r\n  categoryId:any;\r\n  quantity:any;\r\n  user_list: Array<User> = [];\r\n  current_user: Array<User> = [];\r\n  constructor(private api: RestAPIsService,private http:HttpClient,  private route: ActivatedRoute) {\r\n    this.route.queryParams.subscribe(params => {\r\n      this.categoryId = params[\"categoryId\"];\r\n      this.quantity = params[\"quantity\"];\r\n\r\n      // this.currency = JSON.parse(params[\"currency\"]);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAllClients();\r\n  }\r\n  charge_compteur(){\r\n    if (localStorage.getItem(\"compteur\") != null) {\r\n      this.badgecount=localStorage.getItem(\"compteur\");\r\n    }\r\n    else{\r\n      this.badgecount=0;\r\n    }\r\n    return this.badgecount;\r\n\r\n  }\r\n  CurrentUser():Observable<User[]>{\r\n    return this.http.get<User[]>(environmentApi.host+\"/api/user/getCurretnUser\");\r\n  }\r\n  getCurrentUser(){\r\n    var cur_user,i;\r\n    this.CurrentUser().subscribe((data) => {\r\n\r\n      let info=data;\r\n      const groupids = info[0]['groupIds'];\r\n      if(info.length>0) {\r\n        console.log('getCurrentUser');\r\n        console.log(info);\r\n        /*cur_user = new User();\r\n        cur_user.groupIds(groupids[0]['id']);\r\n        cur_user.id(info[0]['id']);\r\n        cur_user.lastName(info[0]['lastName']);\r\n        cur_user.firstName(info[0]['firstName']);\r\n        cur_user.adress(info[0]['adress']);\r\n        cur_user.fax(info[0]['fax']);\r\n        cur_user.email(info[0]['email']);\r\n        cur_user.city(info[0]['city']);\r\n        cur_user.active(info[0]['active']);\r\n        cur_user.dateNaissanced(info[0]['dateNaissanced']);\r\n        cur_user.login(info[0]['login']);\r\n        cur_user.password(info[0]['password']);\r\n        this.current_user.push(cur_user);*/\r\n      }\r\n\r\n    });\r\n\r\n\r\n  }\r\n  AllUser():Observable<User[]>{\r\n    return this.http.get<User[]>(environmentApi.host+\"/api/user/users\");\r\n  }\r\n  getAllClients(){\r\n    var i,user;\r\n    this.CurrentUser().subscribe((data) => {\r\n      let info=data;\r\n\r\n      console.log('getAllClients');\r\n      console.log(info);\r\n     /*   alert(info[1]['groupIds']);\r\n      alert(groupids[0]['id']);\r\n        alert(groupids[0].id);*/\r\n     /* if(info.length>0) {\r\n        for (i = 0; i < info.length; i++) {\r\n          const groupids = info[i]['groupIds'];\r\n          if(groupids.length >0){\r\n            if(groupids[0]['id'] == '3'){\r\n              user = new User();\r\n              user.groupIds(groupids[0]['id']);\r\n              user.id(info[i]['id']);\r\n              user.lastName(info[i]['lastName']);\r\n              user.firstName(info[i]['firstName']);\r\n              user.adress(info[i]['adress']);\r\n              user.fax(info[i]['fax']);\r\n              user.email(info[i]['email']);\r\n              user.city(info[i]['city']);\r\n              user.active(info[i]['active']);\r\n              user.dateNaissanced(info[i]['dateNaissanced']);\r\n              user.login(info[i]['login']);\r\n              user.password(info[i]['password']);\r\n              this.user_list.push(user);\r\n            }\r\n\r\n          }\r\n        }\r\n      }*/\r\n\r\n\r\n\r\n    //  this.dismissLoader();\r\n    });\r\n  }\r\n\r\n  createNewSalesOrderEmpty(clientId:string,purchasingManagerId:string):Promise<any>{\r\n    let httpParams = new HttpParams()\r\n        .append(\"clientId\",clientId )\r\n        .append(\"purchasingManagerId\",purchasingManagerId );\r\n    return this.http.post<RequestSalesOrder>(environmentApi.host + \"/salesorder/createNewSalesOrderEmpty\",httpParams).toPromise();\r\n  }\r\n  addLineToSalesOrder(){\r\n    let data: Order = {\r\n      categoryId: this.categoryId,\r\n      id: null,\r\n      quantity: this.quantity,\r\n      salesOrderId: null,\r\n      state: null\r\n    }\r\n    this.saveLineToSalesOrder(data).subscribe((data)=>{\r\n      console.log(\"succces\");\r\n    },(err)=>{\r\n      //this.util.showToast('Utilisateur existe déjà', 'danger', 'bottom');\r\n    });\r\n  }\r\n  saveLineToSalesOrder(order:Order):Observable<Order> {\r\n    return this.http.post<Order>(environmentApi.host+\"/ligneSale/addLineToSalesOrder\",order);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"pages-ProductRequests-send-request-send-request-module-es5.js"}